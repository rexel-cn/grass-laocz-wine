<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rexel.system.mapper.SysDeptMapper">

    <resultMap type="SysDept" id="SysDeptResult">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="tenantId" column="tenant_id"/>
    </resultMap>

    <sql id="selectDeptVo">
        select d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.status,
               d.del_flag,
               d.create_by,
               d.create_time,
               d.tenant_id
        from sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
        <if test="deptId != null and deptId != 0">
            AND dept_id = #{deptId}
        </if>
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="tenantId != null and tenantId != ''">
            AND tenant_id = #{tenantId}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptListByRoleId" resultType="Integer">
        select d.dept_id
        from sys_dept d
        left join sys_role_dept rd on d.dept_id = rd.dept_id
        where rd.role_id = #{roleId}
        <if test="deptCheckStrictly">
            and d.dept_id not in (select d.parent_id from sys_dept d inner join sys_role_dept rd on d.dept_id =
            rd.dept_id and rd.role_id = #{roleId})
        </if>
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptById" parameterType="String" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        <where>
            <choose>
                <when test="deptId!=null">
                    dept_id = #{deptId}
                </when>
                <otherwise>1=2</otherwise>
            </choose>
        </where>
    </select>

    <select id="checkDeptExistUser" parameterType="String" resultType="int">
        select count(1)
        from sys_user
        where dept_id = #{deptId}
          and del_flag = '0'
    </select>

    <select id="hasChildByDeptId" parameterType="String" resultType="int">
        select count(1)
        from sys_dept
        where del_flag = '0'
          and parent_id = #{deptId}
        limit 1
    </select>

    <select id="selectChildrenDeptById" parameterType="String" resultMap="SysDeptResult">
        select *
        from sys_dept
        where find_in_set(#{deptId}, ancestors)
    </select>

    <select id="selectNormalChildrenDeptById" parameterType="String" resultType="int">
        select count(*)
        from sys_dept
        where status = 0
          and del_flag = '0'
          and find_in_set(#{deptId}, ancestors)
    </select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        <where>
            <if test="deptId != null and deptId != '' ">d.dept_id &lt;&gt; #{deptId}</if>
            <if test="deptName != null and deptName != '' ">and d.dept_name=#{deptName}</if>
            <if test="parentId != null and parentId != '' ">and d.parent_id=#{parentId}</if>
            <if test="tenantId != null and tenantId != '' ">and d.tenant_id=#{tenantId}</if>
        </where>
    </select>
    <select id="getDeptByIds" parameterType="java.util.List" resultType="com.rexel.common.core.domain.entity.SysDept">
        <include refid="selectDeptVo"/>
        <where>
            and d.del_flag = '0'
            <choose>
                <when test="deptIds!=null and deptIds.size()>0">
                    and d.dept_id in
                    <foreach collection="deptIds" item="deptId" open="(" separator="," close=")">
                        #{deptId}
                    </foreach>
                </when>
            </choose>
        </where>
    </select>
    <select id="selectDeptSortCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        `sys_dept`
        <where>
            <if test="deptId!=null and deptId!='' ">
                and dept_id &lt;&gt; #{deptId}
            </if>
            and parent_id= #{parentId}
            and del_flag='0'
            and order_num=#{orderNum}
        </where>
    </select>
    <select id="getDeptById" resultType="com.rexel.common.core.domain.entity.SysDept">
        <include refid="selectDeptVo"/>
        <where>
            <choose>
                <when test="deptId!=null">
                    dept_id = #{deptId}
                </when>
                <otherwise>1=2</otherwise>
            </choose>
        </where>
    </select>
    <select id="selectMaxRoleSort" resultType="java.lang.Long">
        SELECT
        max(order_num)
        FROM
        `sys_dept`
        <where>
            <if test="deptId!=null and deptId!='' ">
                dept_id &lt;&gt; #{deptId}
            </if>
            and del_flag='0'
        </where>
    </select>
    <select id="selectRootDeptCount" parameterType="com.rexel.common.core.domain.entity.SysDept"
            resultType="com.rexel.common.core.domain.entity.SysDept">
        SELECT
        *
        FROM
        `sys_dept`
        <where>
            and parent_id= '0'
            and del_flag='0'
        </where>
    </select>
    <insert id="insertDept" parameterType="SysDept" useGeneratedKeys="true" keyProperty="deptId">
        insert into sys_dept(
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="deptName != null and deptName != ''">dept_name,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="tenantId != null and tenantId != ''">tenant_id,</if>
        create_time
        )values(
        <if test="deptId != null and deptId != 0">#{deptId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="tenantId != null and tenantId != ''">#{tenantId},</if>
        sysdate()
        )
    </insert>

    <update id="updateDept" parameterType="SysDept">
        update sys_dept
        <set>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where dept_id = #{deptId}
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case dept_id" close="end">
            when #{item.deptId} then #{item.ancestors}
        </foreach>
        where dept_id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.deptId}
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="String">
        update sys_dept set status = '0' where dept_id in
        <foreach collection="array" item="deptId" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="String">
        delete
        from sys_dept
        where dept_id = #{deptId}
    </delete>

    <delete id="deleteDeptByTenantIds">
        delete from sys_dept where tenant_id in
        <foreach collection="list" item="tenantId" open="(" separator="," close=")">
            #{tenantId}
        </foreach>
    </delete>

</mapper>
