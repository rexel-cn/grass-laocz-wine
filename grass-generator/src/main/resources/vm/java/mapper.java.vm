package ${packageName}.mapper;

import java.util.List;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import org.springframework.stereotype.Repository;
import ${packageName}.domain.${ClassName};
#if($table.sub)
import ${packageName}.domain.${subClassName};
#end

/**
 * ${functionName}Mapper接口
 *
 * @author ${author}
 * @date ${datetime}
 */
@Repository
public interface ${ClassName}Mapper extends BaseMapper<${ClassName}> {
    /**
     * 查询${functionName}列表
     *
     * @param ${className} ${functionName}
     * @return ${functionName}集合
     */
    List<${ClassName}> select${ClassName}List(${ClassName} ${className});

    /**
     * 批量新增${functionName}
     *
     * @param ${className}List ${functionName}列表
     * @return 结果
     */
    int batch${ClassName}(List<${ClassName}> ${className}List);

    #if($table.sub)

        /**
         * 批量查询${subTable.functionName}
         *
         * @param ${subTableFkClassName} 需要查询的数据ID
         * @return 结果
         */
        List<${subClassName}> select${subClassName}By${subTableFkClassName}(${pkColumn.javaType} ${subTableFkClassName});

        /**
         * 批量删除${subTable.functionName}
         *
         * @param ${pkColumn.javaField}s 需要删除的数据ID
         * @return 结果
         */
        int delete${subClassName}By${subTableFkClassName}s(List<${pkColumn.javaType}> ${pkColumn.javaField}s);

        /**
         * 批量新增${subTable.functionName}
         *
         * @param ${subclassName}List ${subTable.functionName}列表
         * @return 结果
         */
        int batch${subClassName}(List<${subClassName}> ${subclassName}List);


        /**
         * 通过${functionName}主键删除${subTable.functionName}信息
         *
         * @param ${pkColumn.javaField} ${functionName}ID
         * @return 结果
         */
        int delete${subClassName}By${subTableFkClassName}(${pkColumn.javaType} ${pkColumn.javaField});
    #end
}
